// Constants
const int RED_LIGHT_PIN = 2;
const int YELLOW_LIGHT_PIN = 3;
const int GREEN_LIGHT_PIN = 4;
const int TRIGGER_PIN = 5;
const int ECHO_PIN = 6;

const int MIN_DISTANCE = 10; // Minimum distance in centimeters
const int MAX_DISTANCE = 100; // Maximum distance in centimeters

// Variables
long duration;
int distance;

void setup() {
  pinMode(RED_LIGHT_PIN, OUTPUT);
  pinMode(YELLOW_LIGHT_PIN, OUTPUT);
  pinMode(GREEN_LIGHT_PIN, OUTPUT);
  pinMode(TRIGGER_PIN, OUTPUT);
  pinMode(ECHO_PIN, INPUT);
  
  // Initialize serial communication
  Serial.begin(9600);
}

void loop() {
  // Measure the distance
  digitalWrite(TRIGGER_PIN, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);
  
  duration = pulseIn(ECHO_PIN, HIGH);
  
  // Calculate the distance in centimeters
  distance = duration * 0.034 / 2;
  
  // Print the distance to the serial monitor
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");
  
  // Traffic light control based on density
  if (distance >= MIN_DISTANCE && distance <= MAX_DISTANCE) {
    // Traffic is within the specified range
    digitalWrite(RED_LIGHT_PIN, HIGH);
    digitalWrite(YELLOW_LIGHT_PIN, LOW);
    digitalWrite(GREEN_LIGHT_PIN, LOW);
  } else {
    // Traffic is not within the specified range
    digitalWrite(RED_LIGHT_PIN, LOW);
    digitalWrite(YELLOW_LIGHT_PIN, LOW);
    digitalWrite(GREEN_LIGHT_PIN, HIGH);
  }
  
  // Delay before next measurement
  delay(1000);
}
